# 基本设置
port: 7890                # HTTP代理端口
socks-port: 7891          # SOCKS代理端口
allow-lan: false           # 允许局域网连接
bind-address: "*"         # 绑定地址，* 表示所有地址
mode: rule                # 代理模式，rule表示规则模式
log-level: info           # 日志级别
ipv6: false
# 外部控制配置
# 性能优化
tcp-concurrent: true      # 启用 TCP 并发连接。这允许 Clash 同时建立多个 TCP 连接，可以提高网络性能和连接速度
find-process-mode: strict  # 设置进程查找模式为严格模式，Clash 会更精确地识别和匹配网络流量来源的进程

proxies:
# 添加处

# Profile Enhancement Merge Template for Clash Verge
proxy-groups:
  - name: 唯快不破
    include-all: true
    type: select
    proxies:
      - 自动选择
    icon: https://github.com/clash-verge-rev/clash-verge-rev/raw/main/src-tauri/icons/icon.png

  - name: dialer-selector
    include-all: true
    exclude-filter: "ZGO美国原生|美国家宽|微软云|谷歌云"
    type: select
    proxies: 
      - 香港负载均衡
    icon: https://github.com/clash-verge-rev/clash-verge-rev/raw/main/src-tauri/icons/icon.png

  - name: 自动选择
    type: url-test
    include-all: true
    url: http://www.gstatic.com/generate_204
    interval: 300
    icon: https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/adjust.svg

  - name: AI
    include-all: true
    type: select
    proxies:
      - 唯快不破
      - Direct
      - 自动选择
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png

  - name: 香港负载均衡       # 代理组显示名称
    include-all: true
    type: load-balance             # 类型：负载均衡模式
    filter: "(?i)港|hk|hongkong|hong kong"  # 正则筛选香港节点
    url: http://www.gstatic.com/generate_204  # 健康检查URL
    interval: 60                  # 健康检查间隔：300秒
    strategy: consistent-hashing   # 负载均衡策略
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png

  - name: 国际媒体
    include-all: true
    type: select
    proxies:
      - 唯快不破
      - Direct
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png

  - name: 苹果服务
    include-all: true
    type: select
    proxies:
      - Direct
      - 唯快不破
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png

  - name: 微软服务
    include-all: true
    type: select
    proxies:
      - Direct
      - 唯快不破
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png

  - name: 谷歌服务
    include-all: true
    type: select
    proxies:
      - 唯快不破
      - Direct
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png

  - name: 电报消息
    include-all: true
    type: select
    proxies:
      - 唯快不破
      - Direct
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png

  - name: 推特消息
    include-all: true
    type: select
    proxies:
      - 唯快不破
      - Direct
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png

  - name: 广告拦截
    include-all: true
    type: select
    proxies:
      - REJECT
      - Direct
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png

  - name: 兜底分流
    include-all: true
    type: select
    proxies:
      - 唯快不破
      - Direct
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png

  - name: Direct
    include-all: true
    type: select
    proxies:
      - DIRECT

rule-providers:
  # === 广告拦截类 ===
  AD:
    type: http
    behavior: classical
    format: text  # 新增
    url: https://adrules.top/adrules_domainset.txt
    path: ./rule-providers/AD.list
    interval: 86400

  reject:
    type: http
    behavior: domain
    format: text
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.txt
    interval: 86400

  # === AI 服务类 ===
  AIService:
    type: http
    behavior: classical
    format: text  # 添加这行
    url: "https://github.com/Repcz/Tool/raw/X/Clash/Rules/AI.list"
    path: ./rule-providers/AIService.list
    interval: 86400
    
  Gemini: 
    type: http
    behavior: classical
    format: yaml
    path: ./rules/Gemini.yaml
    url: "https://cdn.jsdelivr.net/gh/zuluion/Clash-Template-Config@master/Filter/Gemini.yaml"
    interval: 86400

  Claude: 
    type: http
    behavior: classical
    format: yaml
    path: ./rules/Claude.yaml
    url: "https://cdn.jsdelivr.net/gh/zuluion/Clash-Template-Config@master/Filter/Claude.yaml"
    interval: 86400

  # === 各大厂商服务 ===
  Apple:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Apple.list
    path: ./rule-providers/Apple.list
    interval: 86400

  Google:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Google.list
    path: ./rule-providers/Google.list
    interval: 86400

  Microsoft:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Microsoft.list
    path: ./rule-providers/Microsoft.list
    interval: 86400

  OneDrive:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/OneDrive.list
    path: ./rule-providers/OneDrive.list
    interval: 86400
  
  Copilot:
    type: http
    behavior: classical
    format: yaml
    path: ./rules/Copilot.yaml
    url: "https://cdn.jsdelivr.net/gh/zuluion/Clash-Template-Config@master/Filter/Copilot.yaml"
    interval: 86400

  Github:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Github.list
    path: ./rule-providers/Github.list
    interval: 86400

  # === 社交媒体 ===
  Telegram:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Telegram.list
    path: ./rule-providers/Telegram.list
    interval: 86400

  # === 流媒体 ===
  YouTube:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/YouTube.list
    path: ./rule-providers/YouTube.list
    interval: 86400

  OpenAI:
    type: http
    behavior: classical
    format: yaml
    path: ./rules/OpenAI.yaml
    url: "https://cdn.jsdelivr.net/gh/zuluion/Clash-Template-Config@master/Filter/OpenAI.yaml"
    interval: 86400  

  # === 地理位置和代理规则 ===
  ProxyGFW:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ProxyGFW.list
    path: ./rule-providers/ProxyGFW.list
    interval: 86400

  # === 中国相关 ===
  ChinaDomain:
    type: http
    behavior: classical
    format: text
    path: ./rules/ChinaDomain.list
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list"
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    format: text
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/cncidr.txt 
    interval: 86400

  # === 局域网 ===
  Lan:
    type: http
    behavior: classical
    format: text
    url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Lan.list
    path: ./rule-providers/Lan.list
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    format: text
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/lancidr.txt 
    interval: 86400


  # === 其他服务 ===
  telegramcidr:
    type: http
    behavior: ipcidr
    format: text
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.txt 
    interval: 86400


# DNS配置
dns:
  enable: true            # 启用 Clash 的 DNS 功能
  ipv6: false              # IPv6 DNS 解析
  listen: 0.0.0.0:53   # DNS 服务器监听地址和端口，:53 表示监听所有接口的 53 端口
  enhanced-mode: fake-ip  # 设置增强模式为 fake-ip 模式，提高解析速度和连接性能
  fake-ip-range: 198.18.0.1/16  # 设置 fake-ip 的 IP 地址范围为 198.18.0.1/16
  use-hosts: true         # 启用 hosts 文件解析，Clash 会检查系统的 hosts 文件
  use-system-hosts: true  # 使用系统的 hosts 文件进行域名解析
  prefer-h3: true         # 如果DNS服务器支持DoH3会优先使用h3，提升性能
  respect-rules: true     # 让 DNS 解析遵循 Clash 的路由规则
  # 定义不使用虚假IP解析的域名列表
  fake-ip-filter:
    - '*.lan'
    - localhost.ptlogin2.qq.com
    - '+.srv.nintendo.net'
    - '+.stun.playstation.net'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - '+.xboxlive.com'
    - 'xbox.*.microsoft.com'
    - '*.battlenet.com.cn'
    - '*.battlenet.com'
    - '*.blzstatic.cn'
    - '*.battle.net'
  

  # 建议多写点 DNS （ clash 的机制是同时向所有 DNS 发起解析请求，用返回最快那个，后续的直接丢弃）
  # 用来解析 nameserver 和 fallback 里面的域名的，必须为 IP, 可为加密 DNS
  default-nameserver:
    - 8.8.8.8           # Google DNS
    - 1.1.1.1           # Cloudflare DNS
    - 119.29.29.29      # 腾讯DNSPod
    - 223.5.5.5         # 阿里DNS
    - 223.6.6.6         # 阿里DNS
    - 180.76.76.76      # 百度DNS

  # 用于direct出口域名解析的 DNS 服务器
  # 如果不填则遵循nameserver-policy、nameserver和fallback的配置
  direct-nameserver:
    - system
    - https://doh.pub/dns-query          #腾讯
    - https://dns.alidns.com/dns-query   #阿里
    - 114.114.114.114                    # 114
    - 114.114.115.115                    # 114
    - 101.226.4.6                        # 百度-电信
    - 123.125.81.6                       # 百度-联通
    - 180.76.76.76                       # 百度-联通
    - 112.124.47.27                      # OneDNS-南方
    - 114.215.126.16                     # OneDNS-北方
  nameserver: 
    - https://8.8.8.8/dns-query# 唯快不破
    - https://1.1.1.1/dns-query# 唯快不破
  # 解析代理服务器域名的DNS服务器,就是节点本身中包含的域名
  # 代理节点域名解析服务器，仅用于解析代理节点的域名，如果不填则遵循nameserver-policy、nameserver和fallback的配置
  proxy-server-nameserver:
    - https://1.1.1.1/dns-query          # Cloudflare DNS
    - https://8.8.8.8/dns-query          # Google DNS
    - https://doh.pub/dns-query          #腾讯
    - https://dns.alidns.com/dns-query   #阿里
    - https://9.9.9.9/dns-query          #Quad9
    - https://208.67.222.222/dns-query   #OpenDNS



# 配置文件管理
profile:
  store-selected: true    # 保存用户选择的代理配置，在 Clash 重启后仍然记住上次选择的代理服务器
  store-fake-ip: true     # 适用于 Clash 在 Fake IP 模式下工作时。它会将域名到 Fake IP 的映射关系保存下来，确保 Clash 重启后依然能使用相同的 Fake IP 分配给相同的域名，保持连接的一致性和稳定性

# 域名嗅探
sniffer:
  enable: true            # 启用网络流量嗅探功能，允许 Clash 分析和识别流量类型
  sniff:
    TLS:
      ports: [443, 8443]  # 要嗅探的 TLS 流量端口，包括标准 HTTPS 端口 443 和常用的备用 HTTPS 端口 8443
    HTTP:
      ports: [80, 8080-8880]  # 要嗅探的 HTTP 流量端口，包括标准 HTTP 端口 80 和常用的 HTTP 端口范围 8080-8880
      override-destination: true  # 启用目标覆盖功能，允许 Clash 根据嗅探到的域名重写请求的目标地址

# GeoData 配置
geodata-mode: true        # 启用地理数据模式，使 Clash 使用 GeoIP/GeoSite 数据库进行流量的地理位置识别和规则匹配
geo-auto-update: true     # 启用地理数据库自动更新功能，Clash 会定期检查并更新 GeoIP/GeoSite 数据库
geo-update-interval: 24   # 设置地理数据库的更新间隔为24小时，Clash 会每24小时自动检查一次更新（小时）
geodata-loader: standard  # 设置地理数据加载器为标准模式，使用标准的数据解析和加载方式处理地理数据库
# GeoData下载源（使用国内加速下载源）
# 备用下载域名https://ghfast.top、https://ghproxy.net、https://ghgo.xyz
geox-url:
  geoip: https://fastgh.lainbo.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat
  geosite: https://fastgh.lainbo.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat
  mmdb: https://fastgh.lainbo.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb
  asn: https://fastgh.lainbo.com/https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb


# 规则配置（按优先级排序）
rules:
  # === 1. 局域网和直连规则（最高优先级） ===
  - RULE-SET,Lan,DIRECT,no-resolve
  - RULE-SET,lancidr,DIRECT,no-resolve

  # === 2. 自定义直连规则 ===
  - DOMAIN-SUFFIX,linux.do,DIRECT
  - DOMAIN,demo.fuclaude.com,DIRECT

  # === 3. 广告拦截（优先处理） ===
  - RULE-SET,AD,广告拦截
  - RULE-SET,reject,广告拦截
  
  # 沉浸式翻译相关拦截
  - DOMAIN-SUFFIX,immersive-translate.owenyoung.com,REJECT
  - DOMAIN-SUFFIX,immersivetranslate.com,REJECT
  - DOMAIN-SUFFIX,test-api2.immersivetranslate.com,REJECT
  - DOMAIN-SUFFIX,api2.immersivetranslate.com,REJECT
  - DOMAIN-SUFFIX,config.immersivetranslate.com,REJECT
  - DOMAIN-SUFFIX,app.immersivetranslate.com,REJECT
  - DOMAIN-SUFFIX,dash.immersivetranslate.com,REJECT
  - DOMAIN-SUFFIX,api.immersivetranslate.com,REJECT
  - DOMAIN-SUFFIX,immersive-translate.deno.dev,REJECT
  - DOMAIN-SUFFIX,ai.immersivetranslate.com,REJECT
  - DOMAIN-SUFFIX,test-ai.immersivetranslate.com,REJECT
  - DOMAIN-KEYWORD,immersivetranslate,REJECT
  - DOMAIN-KEYWORD,immersive-translate,REJECT

  # === 4. AI 服务（重要性高） ===
  - RULE-SET,AIService,AI  
  - RULE-SET,Gemini,AI
  - RULE-SET,Claude,AI
  - RULE-SET,OpenAI,AI

  # OpenAI 相关
  - DOMAIN-SUFFIX,algolia.net,AI
  - DOMAIN-SUFFIX,api.statsig.com,AI
  - DOMAIN-SUFFIX,auth0.com,AI
  - DOMAIN-SUFFIX,chatgpt.livekit.cloud,AI
  - DOMAIN-SUFFIX,client-api.arkoselabs.com,AI
  - DOMAIN-SUFFIX,events.statsigapi.net,AI
  - DOMAIN-SUFFIX,featuregates.org,AI
  - DOMAIN-SUFFIX,host.livekit.cloud,AI
  - DOMAIN-SUFFIX,identrust.com,AI
  - DOMAIN-SUFFIX,intercom.io,AI
  - DOMAIN-SUFFIX,intercomcdn.com,AI
  - DOMAIN-SUFFIX,launchdarkly.com,AI
  - DOMAIN-SUFFIX,oaistatic.com,AI
  - DOMAIN-SUFFIX,oaiusercontent.com,AI
  - DOMAIN-SUFFIX,observeit.net,AI
  - DOMAIN-SUFFIX,segment.io,AI
  - DOMAIN-SUFFIX,sentry.io,AI
  - DOMAIN-SUFFIX,stripe.com,AI
  - DOMAIN-SUFFIX,turn.livekit.cloud,AI
  - DOMAIN-KEYWORD,claude,AI

  # Google AI 相关
  - DOMAIN,browser-intake-datadoghq.com,AI
  - DOMAIN,static.cloudflareinsights.com,AI
  - DOMAIN-SUFFIX,learning.google.com,AI

  # === 7. 流媒体服务 ===
  - RULE-SET,YouTube,国际媒体

  # === 5. 各大厂商服务 ===
  - RULE-SET,Apple,苹果服务
  - RULE-SET,Microsoft,微软服务
  - RULE-SET,OneDrive,微软服务
  - RULE-SET,Github,微软服务
  - RULE-SET,Copilot,微软服务
  - RULE-SET,Google,谷歌服务
  
  # === 6. 社交媒体 ===
  - RULE-SET,Telegram,电报消息
  - RULE-SET,telegramcidr,电报消息

  # === 10. 中国网站和IP（直连） ===
  - GEOIP,CN,DIRECT,no-resolve  
  - RULE-SET,cncidr,DIRECT,no-resolve  
  - RULE-SET,ChinaDomain,DIRECT
  - GEOSITE,geolocation-cn,DIRECT

  # # === 11. 代理规则 ===
  - RULE-SET,ProxyGFW,唯快不破
  # - RULE-SET,gfw,国外网站
  # - RULE-SET,proxy,国外网站
  - GEOSITE,geolocation-!cn,唯快不破

  # === 12. 兜底规则 ===
  - MATCH,兜底分流
